@use "../../scss/variables.scss" as v;
@use "../../components/button/button.styles.scss" as buttonStyle;

@mixin layoutStyle {
  left: 0;
  top: 0;
  position: fixed;
  background: rgba(12, 12, 12, 0.5);
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;

  .alert-container {
    background: v.$primary-color;
    width: 920px;
    min-height: 210px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    @media only screen and (max-width: v.$big-resolution) {
      & {
        padding: v.$depend-padding;
        gap: v.$depend-gap;
      }
    }
    .left-side {
      padding: 56px 95px 56px 95px;
      display: grid;
      gap: v.$medium-gap;
      grid-template-rows: repeat(2, 1fr);

      @media only screen and (max-width: v.$big-resolution) {
        & {
          padding: 0;
          gap: v.$depend-gap;
          .title {
            font-size: clamp(2.2rem, 100%, v.$big-font) !important;
          }
          .text {
            font-size: clamp(1.2rem, 100%, v.$small-font) !important;
          }
        }
      }

      @media only screen and (max-width: v.$medium-resolution) {
        & {
          display: flex;
          flex-direction: column;
        }
      }

      .title {
        font-family: v.$font;
        font-weight: v.$bold-font;
        font-size: v.$big-font;
        line-height: v.$line-height-medium;
      }
      .text {
        max-width: 380px;
        font-family: v.$font;
        font-weight: v.$normal-font;
        font-size: v.$small-font;
        line-height: v.$line-height-big;

        .counter {
          font-weight: v.$semi-bold-font;
        }
      }
    }
    .right-side {
      display: grid;
      gap: v.$medium-gap;
      grid-template-rows: repeat(2, 1fr);
      padding: 46px;
      @media only screen and (max-width: v.$big-resolution) {
        & {
          padding: 0;
        }
      }
      #btn-close {
        width: v.$close-size;
        height: v.$close-size;
        position: relative;
        justify-self: flex-end;

        border: none;
        background: none;

        &:hover {
          cursor: pointer;
          background-color: red;
        }

        &:after {
          content: "";
          height: v.$close-size;
          border-left: 2px solid rgb(0, 0, 0);
          position: absolute;
          transform: rotate(45deg);
          top: 0;
        }

        &:before {
          content: "";
          height: v.$close-size;
          border-left: 2px solid rgb(0, 0, 0);
          position: absolute;
          transform: rotate(-45deg);
          top: 0;
        }
      }
      & > #btn-reset {
        @include buttonStyle.buttonStyle;
        display: none;
        @media only screen and (max-width: v.$big-resolution) {
          & {
            transform: scale(0.6);
          }
        }
      }
    }
  }
}
